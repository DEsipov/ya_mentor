#!-*-coding:utf-8-*-

"""
Задача 1. Даны два списка, нужно вернуть элементы,
которые есть в 1-ом списке, но нет во 2-ом.
Оценить эффективность своего решения.

Задача 2. Дан массив целых чисел. Нужно удалить из него нули.
Можно использовать только О(1) дополнительной памяти
"""


def diff(array_1: set, array_2: set) -> set:
    """Задача 1.
    Даны два списка, нужно вернуть элементы,
    которые есть в 1-ом списке, но нет во 2-ом.
    Оценить эффективность своего решения.

    Лаконичность, ясность, скорость написание кода, использование встроенных
    возможностей языка без изобретания велосипеда.

    Считаю решение максимально эффективным.
    """
    return array_1 - array_2


def remove_zero(arr: list) -> list:
    """Задача 2.
    Дан массив целых чисел. Нужно удалить из него нули.
    Можно использовать только О(1) дополнительной памяти.
    """
    for i in range(len(arr) - 1, -1, -1):
        if arr[i] == 0:
            arr.pop(i)

    return arr


if __name__ == '__main__':
    arr_1 = {22, 1, 2, 3}
    arr_2 = {2, 3}
    res = diff(arr_1, arr_2)
    assert res == {1, 22}

    array = [0, 1, 0, 0, 4, 5, 6, 7, 0, 8, -4, 0]
    res = remove_zero(array)
    assert res == [1, 4, 5, 6, 7, 8, -4]
